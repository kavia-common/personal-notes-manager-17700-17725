{"is_source_file": true, "format": "TypeScript", "description": "This file provides functions to interact with notes data in a frontend application, supporting both API-based and localStorage-based data management, including fetching, creating, updating, and deleting notes.", "external_files": ["@ /types/note", "node_modules", "fetch API"], "external_methods": ["fetch", "JSON.parse", "JSON.stringify"], "published": ["fetchNotes", "fetchNote", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "export async function fetchNotes(): Promise<Note[]> { fetchNotes", "description": "Fetches the list of notes from backend API or local storage fallback.", "scope": "", "scopeKind": ""}, {"name": "export async function fetchNote(id: string): Promise<Note | undefined> { fetchNote", "description": "Retrieves a single note by its ID from backend API or local storage fallback.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(note: NoteInput): Promise<Note> { createNote", "description": "Creates a new note with provided input, sending to backend API or updating local storage fallback.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote(id: string, input: NoteInput): Promise<Note> { updateNote", "description": "Updates an existing note by ID with given input, via API or local storage fallback.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: string): Promise<void> { deleteNote", "description": "Deletes a note by ID via API or by updating the local storage fallback.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify"], "search-terms": ["notes API functions", "localStorage fallback", "CRUD notes", "notes frontend API"], "state": 2, "file_id": 12, "knowledge_revision": 42, "git_revision": "569cbf13f4306eb456f5eb132d9ed2522d2a4529", "revision_history": [{"25": ""}, {"38": ""}, {"42": "569cbf13f4306eb456f5eb132d9ed2522d2a4529"}], "ctags": [{"_type": "tag", "name": "API_BASE", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^const API_BASE = process.env.NEXT_PUBLIC_NOTES_API_URL || \"\"; \\/\\/ Set backend endpoint here$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^const STORAGE_KEY = \"notes-demo-list\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^export async function createNote(note: NoteInput): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^  const data = typeof window !== \"undefined\" ? localStorage.getItem(STORAGE_KEY) : null;$/", "language": "TypeScript", "kind": "constant", "scope": "fetchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^export async function deleteNote(id: string): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fetchNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^export async function fetchNote(id: string): Promise<Note | undefined> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fetchNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^export async function fetchNotes(): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^    ...notes[idx],$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^  const idx = notes.findIndex((n) => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "newList", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^  const newList = [newNote, ...notes];$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "newNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^  const newNote: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^  const notes = (await fetchNotes()).filter((n) => n.id !== id);$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^  const notes = await fetchNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^  const notes = await fetchNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "fetchNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^  const notes = await fetchNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^    const r = await fetch(`${API_BASE}\\/notes\\/${id}`);$/", "language": "TypeScript", "kind": "constant", "scope": "fetchNote", "scopeKind": "function"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^    const r = await fetch(`${API_BASE}\\/notes\\/${id}`, { method: \"DELETE\" });$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^    const r = await fetch(`${API_BASE}\\/notes\\/${id}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^    const r = await fetch(`${API_BASE}\\/notes`);$/", "language": "TypeScript", "kind": "constant", "scope": "fetchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^    const r = await fetch(`${API_BASE}\\/notes`, {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^export async function updateNote(id: string, input: NoteInput): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updatedNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^  const updatedNote = {$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "updatedNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^  const updatedNotes = notes.toSpliced(idx, 1, updatedNote); \\/\\/ ES2023: immutable splice$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-17700-17725/notes_frontend/src/api/notes.ts", "pattern": "/^    updated_at: new Date().toISOString(),$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}], "hash": "ab5955a4a9d5c09995db2ff1f926b31a", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/api/notes.ts"}